apply plugin: 'com.android.application'
apply plugin: 'com.didi.dokit'
// // 使用Kotlin插件
// apply plugin: 'kotlin-android'
// // 使用Kotlin Android扩展插件
// apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    useLibrary 'org.apache.http.legacy' // 为了代理webview流量

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        applicationId "me.wizos.loread"
        versionCode 22
        versionName "2.5.0"
        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a'
        }
        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath = true // 解决 Error:Execution failed for task ‘:app:javaPreCompileDebug 问题
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]//指定数据库schema导出的位置
            }
        }
        flavorDimensions "default"

        buildConfigField "String", "DORAEMON_KIT_PRODUCT_ID", "\"${DORAEMON_KIT_PRODUCT_ID}\""
        buildConfigField "String", "INOREADER_APP_ID", "\"${INOREADER_APP_ID}\""
        buildConfigField "String", "INOREADER_APP_KEY", "\"${INOREADER_APP_KEY}\""
        buildConfigField "String", "FEEDLY_APP_ID", "\"${FEEDLY_APP_ID}\""
        buildConfigField "String", "FEEDLY_APP_KEY", "\"${FEEDLY_APP_KEY}\""
    }
    buildTypes {
        release {
            minifyEnabled false //启动混淆
            // proguardFile是混淆使用的配置文件，这里是module根目录下的proguard-rules.pro文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            // applicationIdSuffix '.debug' //增加包名后缀
            minifyEnabled false
            debuggable true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
        coreLibraryDesugaringEnabled true
    }
    // kotlinOptions {
    //     jvmTarget = JavaVersion.VERSION_1_8
    // }
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds, but continue the build even when errors are found:
        abortOnError false
    }
    /*配置渠道*/
    productFlavors {
        coolapk {manifestPlaceholders = [UMENG_CHANNEL_VALUE: "CoolApk"]}
        xiaomi {manifestPlaceholders = [UMENG_CHANNEL_VALUE: "XiaoMi"]}
        github {manifestPlaceholders = [UMENG_CHANNEL_VALUE: "Github"]} // ,UMENG_APP_KEY: "${UMENG_APP_KEY}"
    }
}
repositories{
    flatDir{
        dirs 'libs'
    }
}
dokitExt {
    //通用设置
    comm {
        //地图经纬度开关
        gpsSwitch false
        //网络开关
        networkSwitch true
        //大图开关
        bigImgSwitch true
        //webView js 抓包
        webViewSwitch true
    }

    slowMethod {
        //调用栈模式配置 对应gradle.properties中DOKIT_METHOD_STRATEGY=0
        // stackMethod {
        //     //默认值为 5ms 小于该值的函数在调用栈中不显示
        //     thresholdTime 10
        //     //调用栈函数入口 千万不要用我默认的配置 如果有特殊需求修改成项目中自己的入口 假如不需要可以去掉该字段
        //     enterMethods = ["com.didichuxing.doraemondemo.MainDebugActivity.test1"]
        //     //黑名单 粒度最小到类 暂不支持到方法  千万不要用我默认的配置 如果有特殊需求修改成项目中自己的入口 假如不需要可以去掉该字段
        //     methodBlacklist = ["com.facebook.drawee.backends.pipeline.Fresco"]
        // }
        //普通模式配置 对应gradle.properties中DOKIT_METHOD_STRATEGY=1
        normalMethod {
            //默认值为 500ms 小于该值的函数在运行时不会在控制台中被打印
            thresholdTime 500
            //需要针对函数插装的包名 千万不要用我默认的配置 如果有特殊需求修改成项目中自己的项目包名 假如不需要可以去掉该字段
            packageNames = ["me.wizos.loread"]
            //不需要针对函数插装的包名&类名 千万不要用我默认的配置 如果有特殊需求修改成项目中自己的项目包名 假如不需要可以去掉该字段
            methodBlacklist = ["me.wizos.loread.network"]
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    // implementation "org.jetbrains.kotlin:kotlin-stdlib:1.4.21"
    // implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.9"
    // implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.9"

    // 开发工具
    testImplementation 'junit:junit:4.13'
    implementation 'androidx.annotation:annotation:1.2.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation "androidx.paging:paging-runtime:2.1.2"


    implementation "androidx.work:work-runtime:2.5.0"
    implementation 'com.google.android.material:material:1.3.0'

    debugImplementation 'com.didichuxing.doraemonkit:dokitx:3.3.5'
    releaseImplementation 'com.didichuxing.doraemonkit:dokitx-no-op:3.3.5'

    // 通用的背景设置库，通过标签直接生成shape，无需再写shape.xml [https://github.com/JavaNoober/BackgroundLibrary]
    implementation 'com.noober.background:core:1.6.5' // 1.6.3

    // https://github.com/drakeet/MultiType, 'com.github.kelinZhou:MultiTypeAdapter:1.0.2'
    // implementation 'com.drakeet.multitype:multitype:4.2.0'

    // https://github.com/liangjingkanji/BRV  由于该库过于入侵代码，且替换成本较高，暂不使用
    // implementation 'com.github.liangjingkanji:BRV:1.3.13'

    // implementation  'com.scwang.smart:refresh-layout-kernel:2.0.3'      //核心必须依赖
    // implementation  'com.scwang.smart:refresh-header-classics:2.0.3'    //经典刷新头
    // implementation  'com.scwang.smart:refresh-header-radar:2.0.3'       //雷达刷新头
    // implementation  'com.scwang.smart:refresh-header-falsify:2.0.3'     //虚拟刷新头
    // implementation  'com.scwang.smart:refresh-header-material:2.0.3'    //谷歌刷新头
    // implementation  'com.scwang.smart:refresh-header-two-level:2.0.3'   //二级刷新头
    // implementation  'com.scwang.smart:refresh-footer-ball:2.0.3'        //球脉冲加载
    // implementation  'com.scwang.smart:refresh-footer-classics:2.0.3'    //经典加载

    // implementation 'com.reginald:editspinner:1.1.0'
    implementation project(path: ':editspinner')
    // 列表项左右滑动布局
    implementation project(path: ':support')
    // 分组列表
    // (https://github.com/donkingliang/GroupedRecyclerViewAdapter)
    // implementation 'com.github.donkingliang:GroupedRecyclerViewAdapter:2.4.0'
    implementation "pokercc.android.ExpandableRecyclerView:expandableRecyclerView:0.8.5"

    // 对话框
    // implementation 'com.kongzue.dialog_v3x:dialog:3.1.6'
    // implementation 'com.orhanobut:dialogplus:1.11@aar'
    // implementation 'com.afollestad.material-dialogs:core:3.1.1'
    implementation 'com.afollestad.material-dialogs:core:0.9.6.0'
    implementation 'com.afollestad.material-dialogs:commons:0.9.6.0'

    // app 更新弹窗 [https://github.com/MZCretin/AutoUpdateProject]
    implementation 'com.github.MZCretin:AutoUpdateProject:2.0.4'
    // 透明通知栏
    // implementation 'com.readystatesoftware.systembartint:systembartint:1.0.3'

    // popup [https://github.com/li-xiaojun/XPopup]
    implementation 'com.lxj:xpopup:2.2.19'
    // toast [https://github.com/getActivity/ToastUtils]
    implementation 'com.hjq:toast:8.8'

    // 开关按钮
    implementation 'com.kyleduo.switchbutton:library:2.0.2'

    // 音频部件 [https://github.com/yhaolpz/FloatWindow]
    implementation project(path: ':floatwindow')
    // https://github.com/SDKers/FloatWindow, https://github.com/fenggit/FloatWindow

    // 让播放、暂停按钮优雅的过渡 [https://github.com/Lauzy/PlayPauseView]
    implementation 'com.github.Lauzy:PlayPauseView:1.0.7'

    // [https://github.com/woxingxiao/XEditText] 带删除功能的EditText；显示或者隐藏密码；可设置自动添加分隔符分割电话号码、银行卡号等；支持禁止Emoji表情符号输入。用在了 activity_search.xml 中
    implementation 'com.xw.repo:xedittext-androidx:2.2.6@aar'
    // [https://github.com/zhanghai/materialedittext]
    implementation 'me.zhanghai.android.materialedittext:library:1.0.5'

    // 浏览器[https://github.com/Justson/AgentWeb]
    // implementation 'com.just.agentweb:agentweb-androidx:4.1.4'
    implementation project(path: ':agentweb-core') // 修复双指放大后会自动缩小问题，并升级到androidx

    // 加载 view [https://github.com/ybq/Android-SpinKit]
    // implementation 'com.github.ybq:Android-SpinKit:1.4.0'

    // 时间总线
    implementation 'com.jeremyliao:live-event-bus-x:1.7.2'
    // https://github.com/codyer/ElegantBus
    // implementation "com.github.codyer.ElegantBus:core:2.0.0" // 不需要跨进程时使用

    implementation "androidx.room:room-runtime:2.3.0"
    annotationProcessor "androidx.room:room-compiler:2.3.0"
    implementation 'com.tencent.wcdb:room:1.0.8'  // 代替 room-runtime，同时也不需要再引用 wcdb-android
    annotationProcessor 'android.arch.persistence.room:compiler:1.1.1' // compiler 需要用 room 的

    // 基于 mmap 的高性能通用 key-value 组件
    implementation 'com.tencent:mmkv:1.2.6'

    // 内存泄漏检测工具
    // debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.1'
    // releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.1'

    // 日志
    // [https://github.com/elvishew/xLog]
    implementation 'com.elvishew:xlog:1.9.0'

    // 权限申请 [https://github.com/getActivity/XXPermissions]
    implementation 'com.hjq:xxpermissions:10.6'

    implementation files('libs/umeng-common-9.3.8.jar')
    implementation (name:'umeng-asms-armeabi-v1.2.2', ext:'aar')
    implementation (name:'umeng-apm-armeabi-v1.2.0', ext:'aar')

    // 依赖注入
    implementation 'com.jakewharton:butterknife:10.2.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.1'

    // 序列化数据 [https://github.com/google/gson]
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'org.parceler:parceler-api:1.1.13'
    annotationProcessor 'org.parceler:parceler:1.1.13'

    // 正文抽取器（没有html标签）
    // implementation 'com.chimbori.crux:crux:2.2.0'
    // 正文抽取器
    // implementation project(path: ':extractor')

    implementation 'com.vdurmont:emoji-java:5.1.1'
    // HTML 解析 [https://github.com/jhy/jsoup]
    implementation 'org.jsoup:jsoup:1.13.1'
    // 使用xpath解析提取html数据 [https://github.com/zhegexiaohuozi/JsoupXpath]
    implementation 'cn.wanghaomiao:JsoupXpath:2.4.3'


    // 创建和解析JSONFeed提要, github.com/fschiettecatte/JsonFeed 无法使用，JSONObject 使用的类找不到
    // [https://github.com/rometools/rome]
    // RSS 解析与生成
    implementation "com.rometools:rome:$romeVersion"
    // 诸如MediaRSS，GeoRSS等扩展的生成器和解析器
    implementation "com.rometools:rome-modules:$romeVersion"
    // OPML 解析与工具
    implementation "com.rometools:rome-opml:$romeVersion"

    // 解析播客源 [https://github.com/MarkusLewis/Podcast-Feed-Library] rome 已支持该功能
    // implementation 'com.icosillion.podengine:podengine:2.3'

    // implementation 'com.prof.rssparser:rssparser:3.1.3'
    // implementation files('libs/feedparser-0.1.jar')

    // JS 库 [https://github.com/APISENSE/rhino-android]
    implementation 'io.apisense:rhino-android:1.1.1'

    // 查看大图 [https://github.com/SherlockGougou/BigImageViewPager]
    implementation 'com.github.SherlockGougou:BigImageViewPager:androidx-6.1.3' // 6.0.1,6.1.3
    // Glide 底层使用okhttp3
    implementation("com.github.bumptech.glide:okhttp3-integration:$glideVersion") { transitive = false }

    // [https://github.com/bumptech/glide]
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    annotationProcessor "com.github.bumptech.glide:compiler:$glideVersion"

    // [https://github.com/kirich1409/SvgGlidePlugins]
    implementation project(':svg')

    // webpdecoder [https://github.com/zjupure/GlideWebpDecoder]
    // implementation "com.zlc.glide:webpdecoder:2.0.4.12.0"

    // [https://github.com/penfeizhou/APNG4Android]
    // implementation 'com.github.penfeizhou.android.animation:awebp:2.8.0'
    // implementation 'com.github.penfeizhou.android.animation:apng:2.8.0'
    // implementation 'com.github.penfeizhou.android.animation:gif:2.8.0'
    // implementation 'com.github.penfeizhou.android.animation:glide-plugin:2.8.0'

    // 生成/扫描二维码 https://github.com/bingoogolapple/BGAQRCode-Androidc
    // implementation 'cn.bingoogolapple:bga-qrcode-zxing:1.3.7'
    // https://github.com/jenly1314/ZXingLite
    implementation 'com.king.zxing:zxing-lite:2.0.3'

    // retrofit2
    implementation('com.squareup.retrofit2:retrofit:2.9.0') { transitive = false }
    implementation('com.squareup.retrofit2:converter-gson:2.9.0') { transitive = false }
    // okHttp
    implementation 'com.squareup.okhttp3:okhttp:4.9.1'
    implementation 'com.squareup.okio:okio:2.10.0'
    implementation files('libs/okgo-3.0.4.jar')

    // NetCipher是适用于Android的库，它提供了多种改进方法移动应用程序中的网络安全。
    // 它提供了TLS最佳做法使用标准Android HTTP方法，HttpURLConnection和Apache HTTP Client，提供了简单的Tor集成，
    // 使其易于实现配置HTTP连接和WebView实例的代理。
    // (https://github.com/guardianproject/NetCipher)

    // 在 Android 5 及更高版本上使用新式 WebView API。
    implementation "androidx.webkit:webkit:1.4.0"
    // 网络状态监听 [https://github.com/allenlzhang/NetworkState]
    // implementation 'com.github.allenlzhang:NetworkState:v1.0.0'
    // 本地版本修复部分手机出现空指针问题，并升级到androidx
    implementation project(path: ':networklibs')

    // 反向代理
    // implementation project(path: ':reverseproxy')

    // 视频嗅探 (https://github.com/fanchen001/Sniffing)
    // implementation project(path: ':sniffing') // 1.0.1

    // 图片压缩 [https://github.com/Curzibn/Luban]
    implementation project(path: ':luban')
    // https://github.com/forJrking/KLuban
    // implementation 'com.github.forJrking:KLuban:1.0.7'

    // 防止三方 SDK 中常见的损害用户体验的行为 [https://github.com/oasisfeng/condom]
    implementation 'com.oasisfeng.condom:library:2.5.0'


    // 允许在 API 26 之下使用 java.time.Instant
    // https://stackoverflow.com/questions/55550936/call-requires-api-level-26-current-min-is-23-java-time-instantnow
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5'
}